include:
  - local: .gitlab/ci/container-analysis.yaml
  - local: .gitlab/ci/gradle-build-tool.yaml

workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.caching=true -Duser.name=davin.kevin+gitlab-ci-runner-podcast-server"
  GRADLE_USER_HOME: $CI_PROJECT_DIR/.gradle_home
  YARN_CACHE_FOLDER: $CI_PROJECT_DIR/.yarn
  DEVELOCITY_SERVER: https://develocity.davinkevin.fr

stages:
  - ⬇ download
  - 🧪 test
  - 👷‍ build
  - 🐳 packaging
  - 🔎 Security Analysis

⬇ backend:
  stage: ⬇ download
  extends: [ .only-on-backend-changes ]
  needs: [⬇ build-tool]
  image: gradle:jdk21
  script:
    - ./gradlew $GRADLE_OPTS :backend:downloadDependencies :backend-lib-youtubedl:downloadDependencies :backend-lib-database:downloadDependencies
  cache:
    - !reference [ .using-build-tool ]
    - key:
        files:
          - backend/build.gradle.kts
        prefix: "backend"
      paths:
        - .gradle
        - .gradle_home/caches
        - backend/build

⬇ ui-v1:
  stage: ⬇ download
  extends: [ .only-on-frontend-changes ]
  needs: [⬇ build-tool]
  image: gradle:jdk21
  before_script:
    - apt update && apt install bzip2
  script:
    - ./gradlew $GRADLE_OPTS :frontend-angularjs:downloadDependencies
  cache:
    - !reference [ .using-build-tool ]
    - key:
        files:
          - frontend-angularjs/npm-shrinkwrap.json
          - frontend-angularjs/www/config.js
        prefix: "ui-v1"
      paths:
        - .gradle
        - .gradle_home/caches
        - frontend-angularjs/.gradle
        - frontend-angularjs/node_modules/
        - frontend-angularjs/www/jspm_packages/
        - frontend-angularjs/target/

⬇ ui-v2:
  stage: ⬇ download
  extends: [ .only-on-frontend-changes ]
  needs: [⬇ build-tool]
  image: gradle:jdk21
  script:
    - ./gradlew $GRADLE_OPTS :frontend-angular:downloadDependencies
  cache:
    - !reference [ .using-build-tool ]
    - key:
        files:
          - frontend-angular/yarn.lock
        prefix: "ui-v2"
      paths:
        - .gradle
        - .gradle_home/caches
        - .yarn
        - frontend-angular/.gradle
        - frontend-angular/node_modules/

🧪 backend:
  stage: 🧪 test
  extends: [ .only-on-backend-changes ]
  image: gradle:jdk21
  needs: [⬇ backend]
  services:
    - postgres:17.0-alpine
  variables:
    POSTGRES_USER: pg-user
    POSTGRES_PASSWORD: LUiUwCfPwhGx1rQaUJEa7L09mdifP1Es
    POSTGRES_DB: podcast-server-db
  script:
    - ./gradlew $GRADLE_OPTS backend-lib-database:flywayMigrate :backend:test backend:koverLog backend:koverHtmlReport
  artifacts:
    paths:
      - backend/build/reports/kover/html/**/*
    reports:
      junit: backend/build/test-results/test/TEST-*.xml
  coverage: '/^application line coverage:\s(\d+\.\d+%)/'
  cache:
    - !reference [ .using-build-tool ]
    - key:
        files:
          - backend/build.gradle.kts
        prefix: "backend"
      policy: pull
      paths:
        - .gradle
        - .gradle_home/caches
        - backend/build
  retry: 2

🧪 database:
  stage: 🧪 test
  extends: [ .only-on-backend-changes ]
  image: gradle:jdk21
  needs: [⬇ backend]
  services:
    - postgres:17.0-alpine
  variables:
    POSTGRES_USER: pg-user
    POSTGRES_PASSWORD: LUiUwCfPwhGx1rQaUJEa7L09mdifP1Es
    POSTGRES_DB: podcast-server-db
  script:
    - ./gradlew $GRADLE_OPTS backend-lib-database:generateJooq
    - git diff || true
    - git diff-index --quiet HEAD -- || exit 8
  cache:
    - !reference [ .using-build-tool ]
    - key:
        files:
          - backend/build.gradle.kts
        prefix: "backend"
      policy: pull
      paths:
        - .gradle
        - .gradle_home/caches

🧪 ui-v2:
  stage: 🧪 test
  extends: [ .only-on-frontend-changes ]
  image: gradle:jdk21
  needs: [⬇ ui-v2]
  script:
    - ./gradlew $GRADLE_OPTS :frontend-angular:yarn_test
  cache:
    - !reference [ .using-build-tool ]
    - key:
        files:
          - frontend-angular/yarn.lock
        prefix: "ui-v2"
      policy: pull
      paths:
        - .gradle
        - .gradle_home/caches
        - .yarn
        - frontend-angular/.gradle
        - frontend-angular/node_modules/

👷 backend-base-image:
  stage: 👷‍ build
  extends: [ .only-on-backend-changes ]
  needs: []
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - !reference [ .cicd_utils ]
    - kaniko_auth_docker_hub
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/backend/src/main/base-image/Dockerfile --destination podcastserver/backend-base-image:${CI_COMMIT_TAG:-$CI_COMMIT_REF_SLUG}

👷 ui-v1:
  stage: 👷‍ build
  extends: [ .only-on-frontend-changes ]
  image: gradle:jdk21
  needs: [⬇ ui-v1]
  script:
    - ./gradlew $GRADLE_OPTS :frontend-angularjs:build
  artifacts:
    paths:
      - frontend-angularjs/target/dist/
  cache:
    - !reference [ .using-build-tool ]
    - key:
        files:
          - frontend-angularjs/npm-shrinkwrap.json
          - frontend-angularjs/www/config.js
        prefix: "ui-v1"
      policy: pull
      paths:
        - .gradle
        - .gradle_home/caches
        - frontend-angularjs/.gradle
        - frontend-angularjs/node_modules/
        - frontend-angularjs/www/jspm_packages/
        - frontend-angularjs/target/

👷 ui-v2:
  stage: 👷‍ build
  extends: [ .only-on-frontend-changes ]
  image: gradle:jdk21
  needs: [⬇ ui-v2]
  script:
    - ./gradlew $GRADLE_OPTS :frontend-angular:build
  artifacts:
    paths:
      - frontend-angular/dist/
  cache:
    - !reference [ .using-build-tool ]
    - key:
        files:
          - frontend-angular/yarn.lock
        prefix: "ui-v2"
      policy: pull
      paths:
        - .gradle
        - .gradle_home/caches
        - .yarn
        - frontend-angular/.gradle
        - frontend-angular/node_modules/

👷 documentation:
  stage: 👷‍ build
  needs: []
  extends: [ .only-on-documentation-changes ]
  image: antora/antora
  script:
    - antora generate documentation/documentation.yml --to-dir documentation/dist
  artifacts:
    paths:
      - documentation/dist/

🐳 backend:
  stage: 🐳 packaging
  extends: [ .only-on-backend-changes ]
  image: gradle:jdk21
  needs: [⬇ backend, 👷 backend-base-image]
  services:
    - postgres:17.0-alpine
  variables:
    POSTGRES_USER: pg-user
    POSTGRES_PASSWORD: LUiUwCfPwhGx1rQaUJEa7L09mdifP1Es
    POSTGRES_DB: podcast-server-db
  script:
    - ./gradlew $GRADLE_OPTS :backend:jib
  cache:
    - !reference [ .using-build-tool ]
    - key:
        files:
          - backend/build.gradle.kts
        prefix: "backend"
      policy: pull
      paths:
        - .gradle
        - .gradle_home/caches
        - backend/build
  environment:
    name: backend/$CI_COMMIT_REF_SLUG
    url: https://cloud.docker.com/u/podcastserver/repository/docker/podcastserver/backend/tags
    on_stop: 🗑 backend

🗑 backend:
  stage: 🐳 packaging
  extends: [ .delete-docker-image ]
  variables:
    GIT_STRATEGY: none
  script:
    - delete_docker_hub_image backend
    - delete_docker_hub_image backend-base-image
  rules:
    - !reference [ .not-on-default-branch ]
    - !reference [ .manual_run_if_changes_on_backend_files ]
  environment:
    name: backend/$CI_COMMIT_REF_SLUG
    action: stop

🐳 init-db:
  stage: 🐳 packaging
  extends: [ .only-on-backend-changes ]
  needs: []
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - !reference [ .cicd_utils ]
    - kaniko_auth_docker_hub
  script:
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/backend-lib-database/src/main/docker/Dockerfile --destination podcastserver/init-db:${CI_COMMIT_TAG:-$CI_COMMIT_REF_SLUG}
    - if [ "${CI_COMMIT_TAG:-$CI_COMMIT_REF_SLUG}" == "$CI_DEFAULT_BRANCH" ]; then /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/backend-lib-database/src/main/docker/Dockerfile --destination podcastserver/init-db:latest ; fi
  environment:
    name: init-db/$CI_COMMIT_REF_SLUG
    url: https://cloud.docker.com/u/podcastserver/repository/docker/podcastserver/init-db/tags
    on_stop: 🗑 init-db

🗑 init-db:
  stage: 🐳 packaging
  extends: [ .delete-docker-image ]
  variables:
    GIT_STRATEGY: none
    COMPONENT: init-db
  rules:
    - !reference [ .not-on-default-branch ]
    - !reference [ .manual_run_if_changes_on_backend_files ]
  environment:
    name: init-db/$CI_COMMIT_REF_SLUG
    action: stop

🐳 storage:
  stage: 🐳 packaging
  extends: [ .only-on-storage-changes ]
  needs: []
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - !reference [ .cicd_utils ]
    - kaniko_auth_docker_hub
  script:
    - export VERSION="${CI_COMMIT_TAG:-$CI_COMMIT_REF_SLUG}"
    - export PROJECT_DIR=$CI_PROJECT_DIR/storage
    - /kaniko/executor --context $PROJECT_DIR --dockerfile $PROJECT_DIR/Dockerfile --destination podcastserver/storage:${VERSION}
    - if [ "$VERSION" == "$CI_DEFAULT_BRANCH" ]; then /kaniko/executor --context $PROJECT_DIR --dockerfile $PROJECT_DIR/Dockerfile --destination podcastserver/storage:latest ; fi
  environment:
    name: storage/$CI_COMMIT_REF_SLUG
    url: https://cloud.docker.com/u/podcastserver/repository/docker/podcastserver/storage/tags
    on_stop: 🗑 storage

🗑 storage:
  stage: 🐳 packaging
  extends: [ .delete-docker-image ]
  variables:
    GIT_STRATEGY: none
    COMPONENT: storage
  rules:
    - !reference [ .not-on-default-branch ]
    - !reference [ .manual_run_if_changes_on_storage_files ]
  environment:
    name: storage/$CI_COMMIT_REF_SLUG
    action: stop

🐳 ui:
  stage: 🐳 packaging
  extends: [ .only-on-frontend-changes ]
  needs: [👷 ui-v1, 👷 ui-v2, 🧪 ui-v2]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script:
    - !reference [ .cicd_utils ]
    - kaniko_auth_docker_hub
  script:
    - sh ./ui/compile.sh
    - export VERSION="${CI_COMMIT_TAG:-$CI_COMMIT_REF_SLUG}"
    - export PROJECT_DIR=$CI_PROJECT_DIR/ui/target/docker/
    - /kaniko/executor --context $PROJECT_DIR --dockerfile $PROJECT_DIR/Dockerfile --destination podcastserver/ui:${VERSION}
    - if [ "$VERSION" == "$CI_DEFAULT_BRANCH" ]; then /kaniko/executor --context $PROJECT_DIR --dockerfile $PROJECT_DIR/Dockerfile --destination podcastserver/ui:latest ; fi
  environment:
    name: ui/$CI_COMMIT_REF_SLUG
    url: https://cloud.docker.com/u/podcastserver/repository/docker/podcastserver/ui/tags
    on_stop: 🗑 ui

🗑 ui:
  stage: 🐳 packaging
  extends: [ .delete-docker-image ]
  variables:
    COMPONENT: ui
  rules:
    - !reference [ .not-on-default-branch ]
    - !reference [ .manual_run_if_changes_on_frontend_files ]
  environment:
    name: ui/$CI_COMMIT_REF_SLUG
    action: stop