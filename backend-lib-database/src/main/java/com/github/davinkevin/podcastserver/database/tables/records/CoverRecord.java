/*
 * This file is generated by jOOQ.
 */
package com.github.davinkevin.podcastserver.database.tables.records;


import com.github.davinkevin.podcastserver.database.tables.Cover;

import java.util.UUID;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CoverRecord extends UpdatableRecordImpl<CoverRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.cover.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.cover.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.cover.height</code>.
     */
    public void setHeight(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.cover.height</code>.
     */
    public Integer getHeight() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.cover.url</code>.
     */
    public void setUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.cover.url</code>.
     */
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.cover.width</code>.
     */
    public void setWidth(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.cover.width</code>.
     */
    public Integer getWidth() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CoverRecord
     */
    public CoverRecord() {
        super(Cover.COVER);
    }

    /**
     * Create a detached, initialised CoverRecord
     */
    public CoverRecord(UUID id, Integer height, String url, Integer width) {
        super(Cover.COVER);

        setId(id);
        setHeight(height);
        setUrl(url);
        setWidth(width);
        resetChangedOnNotNull();
    }
}
