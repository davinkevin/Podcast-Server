/*
 * This file is generated by jOOQ.
 */
package com.github.davinkevin.podcastserver.database.tables.records;


import com.github.davinkevin.podcastserver.database.tables.PlaylistItems;

import java.util.UUID;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PlaylistItemsRecord extends UpdatableRecordImpl<PlaylistItemsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.playlist_items.playlists_id</code>.
     */
    public void setPlaylistsId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.playlist_items.playlists_id</code>.
     */
    public UUID getPlaylistsId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.playlist_items.items_id</code>.
     */
    public void setItemsId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.playlist_items.items_id</code>.
     */
    public UUID getItemsId() {
        return (UUID) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<UUID, UUID> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PlaylistItemsRecord
     */
    public PlaylistItemsRecord() {
        super(PlaylistItems.PLAYLIST_ITEMS);
    }

    /**
     * Create a detached, initialised PlaylistItemsRecord
     */
    public PlaylistItemsRecord(UUID playlistsId, UUID itemsId) {
        super(PlaylistItems.PLAYLIST_ITEMS);

        setPlaylistsId(playlistsId);
        setItemsId(itemsId);
        resetChangedOnNotNull();
    }
}
